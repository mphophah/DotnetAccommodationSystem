@model IEnumerable<AMS.Models.CommunicationVM>

@{
    ViewData["Title"] = "Index";
}

<div class="card">
    <div class="card-header">
        <div class="wrapper-inner-card d-flex justify-content-between align-items-center">
            <h3 class="text-uppercase">Log Call</h3>
            <button type="button" class="btn back btn-success">
                <a asp-action="Create">
                    <i class="fa fa-plus" aria-hidden="true"></i>Log New Call
                </a>
            </button>
        </div>
    </div>

    <!-- /.card-header -->
    <div class="card-body">
        <table id="example1" class="table table-bordered table-striped">
            <thead>
                <tr>
                    <th>Communication Type</th>
                    <th>Email Receiver</th>
                    <th>Email Subject</th>
                    <th>Email Message</th>
                    <th>Sms Receiver</th>
                    <th>Sms Subject</th>
                    <th>Sms Message</th>
                    <th>Process</th>
                    <th>Respond</th>
                    <th>Actions</th>
                </tr>
            </thead>

            <tbody>

                @foreach (var item in Model)
                {
                    <tr>
                        <td>
                            @Html.DisplayFor(modelItem => item.CommunicationType)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.EmailReceiver)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.EmailSubject)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.EmailMessage)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.SmsReceiver)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.SmsSubject)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.SmsMessage)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Process)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Respond)
                        </td>
                        <td>
                            <a asp-action="Details" asp-route-id="@item.Id">Details</a>
                        </td>
                    </tr>
                }


            </tbody>
        </table>
        <!-- /.card-body -->



    </div>
</div>


@section Scripts{

    <script src="~/plugins/datatables/jquery.dataTables.min.js"></script>
    <script src="~/plugins/datatables-bs4/js/dataTables.bootstrap4.min.js"></script>
    <script src="~/plugins/datatables-responsive/js/dataTables.responsive.min.js"></script>
    <script src="~/plugins/datatables-responsive/js/responsive.bootstrap4.min.js"></script>
    <script src="~/plugins/datatables-buttons/js/dataTables.buttons.min.js"></script>
    <script src="~/plugins/datatables-buttons/js/buttons.bootstrap4.min.js"></script>
    <script src="~/plugins/jszip/jszip.min.js"></script>
    <script src="~/plugins/pdfmake/pdfmake.min.js"></script>
    <script src="~/plugins/pdfmake/vfs_fonts.js"></script>
    <script src="~/plugins/datatables-buttons/js/buttons.html5.min.js"></script>
    <script src="~/plugins/datatables-buttons/js/buttons.print.min.js"></script>
    <script src="~/plugins/datatables-buttons/js/buttons.colVis.min.js"></script>

    <script>
        console.log("Hello")
        $(function () {
            $("#example1").DataTable({
                "responsive": true, "lengthChange": false, "autoWidth": false,
            });

        });
    </script>
}